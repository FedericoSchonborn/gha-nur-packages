name: "Build and Populate Cache"

on:
  push:
  schedule:
    - cron: "55 07 * * *"
  workflow_dispatch:

jobs:
  matrix:
    name: Matrix
    runs-on: ubuntu-24.04
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - name: Checkout
        run: |
          git clone --depth 1 https://codeberg.org/FedericoSchonborn/nur-packages.git $GITHUB_WORKSPACE

      - name: Install Lix
        uses: samueldr/lix-gha-installer-action@latest

      - name: Generate Matrix
        id: matrix
        run: |
          set -euo pipefail
          matrix="$(nix eval --json '.#githubActionsMatrix')"
          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

  build:
    name: Build (${{ matrix.channel }}, ${{ matrix.system }})
    needs: matrix
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.matrix.outputs.matrix) }}
    runs-on: >-
      ${{ (matrix.system == 'x86_64-linux'   && 'ubuntu-24.04')
       || (matrix.system == 'aarch64-linux'  && 'ubuntu-24.04-arm')
       || (matrix.system == 'x86_64-darwin'  && 'macos-13')
       || (matrix.system == 'aarch64-darwin' && 'macos-15') }}

    steps:
      - name: Checkout
        run: |
          git clone --depth 1 https://codeberg.org/FedericoSchonborn/nur-packages.git $GITHUB_WORKSPACE

      - name: Install Lix
        uses: samueldr/lix-gha-installer-action@latest
        with:
          extra_nix_config: |
            nix-path = nixpkgs=channel:${{ matrix.channel }}

      - name: Set up Cachix
        uses: cachix/cachix-action@v16
        with:
          name: ${{ vars.CACHIX_CACHE }}
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Show Nixpkgs version
        run: |
          nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version'

      - name: Check evaluation
        run: |
          nix-env -f . -qa \* --meta --xml \
            --allowed-uris https://static.rust-lang.org \
            --option restrict-eval true \
            --option allow-import-from-derivation true \
            --drv-path --show-trace \
            -I "nixpkgs=$(nix-instantiate --find-file nixpkgs)" \
            -I "$PWD"

      - name: Build Nix packages
        run: nix-build --show-trace ci.nix -A cacheOutputs
